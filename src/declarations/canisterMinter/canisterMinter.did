type TokenId = nat;
type Result = 
 variant {
   err: text;
   ok: TokenId;
 };
type Dip721Nft = 
 service {
   approve: (principal, TokenId) -> ();
   balanceOf: (principal) -> (opt nat) query;
   doIOwn: (nat) -> (bool) query;
   getApproved: (TokenId) -> (opt principal);
   isApprovedForAll: (principal, principal) -> (bool);
   mint: (text) -> (Result);
   name: () -> (text) query;
   ownerOf: (TokenId) -> (opt principal) query;
   setApprovalForAll: (principal, bool) -> () oneway;
   symbol: () -> (text) query;
   tokenURI: (TokenId) -> (opt text) query;
   transferFrom: (principal, principal, TokenId) -> () oneway;
 };
service : () -> Dip721Nft
